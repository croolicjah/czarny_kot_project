"""
Django settings for czarny_kot project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
import environ

from pathlib import Path

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = False

ALLOWED_HOSTS = ['*', '.czarny_kot.app']

CSRF_TRUSTED_ORIGINS = ['https://*.127.0.0.1', 'https://czornykot.pl']

# SECURE_REFERRER_POLICY = 'origin'

# Application definition
INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'czarny_kot',
    'posts',
    'tinymce',
    'banners',
    'catalog',
    'accounts.apps.AccountsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'czarny_kot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'czarny_kot.wsgi.app'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql',
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env("POSTGRES_DATABASE"),
        "USER": env('POSTGRES_USER'),
        "PASSWORD": env('POSTGRES_PASSWORD'),
        "HOST": env("POSTGRES_HOST"),
        "URL": env("POSTGRES_URL"),
        "PORT": "5432"
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'pl-PL'

TIME_ZONE = 'Europe/Warsaw'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]
# STATICFILES_DIRS = [
#     BASE_DIR / 'static',
# ]

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build', 'static')

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# TINYMCE_JS_URL = env('TINYMCE_JS_URL')
TINYMCE_JS_URL = "czarny_kot/tinymce/tinymce.min.js"
TINYMCE_COMPRESSOR = False

TINYMCE_DEFAULT_CONFIG = {
    'theme': 'silver',
    'branding': False,
    # 'skin': 'oxide-dark',
    "height": "800px",
    "width": "700px",

    "menubar": "file edit view insert format tools table help",
    "plugins": "advlist anchor autoresize autosave autolink lists fullscreen codesample directionality "
               "link image media charmap importcss preview anchor searchreplace visualblocks code "
               "emoticons nonbreaking pagebreak quickbars save table template visualchars wordcount "
    "fullscreen insertdatetime media table code help",
    "toolbar1": " blocks fontsizeselect formatselect | alignleft "
    "aligncenter alignright | bold italic underline | outdent indent | numlist bullist checklist |",
    'toolbar2': " forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | insertfile image media link anchor | fontfamily "
    " | fullscreen  preview | code",


    'content_css': ['https://czornykot.pl/static/czarny_kot/bootstrap-5.3.2/dist/css/bootstrap.min.css',
                    'https://czornykot.pl/static/czarny_kot/assets/css/czarny_kot.css',
                    ],
    'font_formats': "Bazowa = system-ui",
}

# TINYMCE_SPELLCHECKER = True
#


# Imgur API access
# CLIENT_ID = env("IMGUR_CONSUMER_ID"),
# CLIENT_SECRET = env("IMGUR_CONSUMER_SECRET"),
# CLIENT_USERNAME = env("IMGUR_USERNAME"),
# ACCESS_TOKEN = env("IMGUR_ACCESS_TOKEN"),
# REFRESH_TOKEN = env("IMGUR_ACCESS_TOKEN_REFRESH"),

STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },

    "imgur": {
        "BACKEND": "czarny_kot.imgur_storage.ImgurStorage",
        "OPTIONS": {
            "base_api_url": "https://api.imgur.com/3/",
            "location": "",
            "CLIENT_ID": env("IMGUR_CONSUMER_ID"),
            "CLIENT_SECRET": env("IMGUR_CONSUMER_SECRET"),
            "CLIENT_USERNAME": env("IMGUR_USERNAME"),
            "ACCESS_TOKEN": env("IMGUR_ACCESS_TOKEN"),
            "REFRESH_TOKEN": env("IMGUR_ACCESS_TOKEN_REFRESH"),
        }
    },
}

JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Czórny Kot",

    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Czórny Kot",

    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Czórny Kot",

    # Logo to use for your site, must be present in static files, used for brand on top left
    "site_logo": "czarny_kot/assets/img/favicon/logotyp_dark_mode_czk.svg",

    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    "login_logo": "czarny_kot/assets/img/favicon/logotyp_dark_mode_czk.svg",

    # Logo to use for login form in dark themes (defaults to login_logo)
    "login_logo_dark": "czarny_kot/assets/img/favicon/logotyp_dark_mode_czk.svg",

    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    "site_icon": "czarny_kot/assets/img/favicon/logotyp_dark_mode_czk.svg",

    # Welcome text on the login screen
    "welcome_sign": "Warsztat www Czôrnego Kòta",

    # Copyright on the footer
    "copyright": "Acme Library Ltd",

    # List of model admins to search from the search bar, search bar omitted if excluded
    # If you want to use a single search field you dont need to use a list, you can use a simple string
    "search_model": ["posts.post", "posts.section"],

    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": None,

    # ############
    # # Top Menu #
    # ############
    #
    # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},

        # external url that opens in a new window (Permissions can be added)
        {"name": "Confluence", "url": "https://pomerio.atlassian.net/wiki/spaces/CK/pages/786504/Strona+www+CK", "new_window": True},
        {"name": "Trello", "url": "https://trello.com/b/TXFW3GrW", "new_window": True},
        {"name": "Imgur", "url": "https://imgur.com/user/CzornyKot/posts", "new_window": True},
        {"name": "WWW", "url": "https://czornykot.pl", "new_window": True},

        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},

        # App with dropdown menu to all its models pages (Permissions checked against models)
        # {"app": "posts"},
    ],
    #
    # #############
    # # User Menu #
    # #############
    #
    # # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    # "usermenu_links": [
    #     {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
    #     {"model": "auth.user"}
    # ],
    #
    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": True,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": ['auth'],

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": [],

    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": ["posts", "posts.post", "post.session", "custom_links", "auth"],

    # Custom links to append to app groups, keyed on app name
    # "custom_links": {
    #     "posts": [
    #         {
    #             "name": "Confluence",
    #             "url": "https://pomerio.atlassian.net/wiki/spaces/CK/pages/786504/Strona+www+CK",
    #             "icon": "fas fa-comments",
    #             # "permissions": ["books.view_book"]
    #         },
    #         {
    #         "name": "Trello",
    #         "url": "make_messages",
    #         "icon": "fa-brands fa-trello",
    #         # "permissions": ["books.view_book"]
    #         },
    #     ],
    #     "Trello": [],
    #     "Imgur": [{
    #         "name": "Imgur",
    #         "url": "make_messages",
    #         "icon": "fas fa-comments",
    #         # "permissions": ["books.view_book"]
    #     }]
    # },

    # Custom icons for side menu apps/models See
    # https://fontawesome.com/icons?d=gallery&m=free&v=5.0.0,5.0.1,5.0.10,5.0.11,5.0.12,5.0.13,5.0.2,5.0.3,5.0.4,5.0.5,5.0.
    # 6,5.0.7,5.0.8,5.0.9,5.1.0,5.1.1,5.2.0,5.3.0,5.3.1,5.4.0,5.4.1,5.4.2,5.13.0,5.12.0,5.11.2,5.11.1,5.10.0,5.9.0,5.8.2,5.8.1,5.7.2,5.7.1,5.7.0,5.6.3,5.5.0,5.4.2
    # for the full list of 5.13.0 free icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "Trello": "fa-brands fa-trello",
    },
    # # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": True,
    #
    # #############
    # # UI Tweaks #
    # #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": 'posts/css/admin/interface-fix.css',
    "custom_js": None,
    # Whether to link font from fonts.googleapis.com (use custom_css to supply font otherwise)
    "use_google_fonts_cdn": True,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": True,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "single",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
    # Add a language dropdown into the admin
    # "language_chooser": True,
}
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": True,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-gray",
    "accent": "accent-dark",
    "navbar": "navbar-white",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-secondary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "lux",
    "dark_mode_theme": None,
    # "button_classes": {
    #     "primary": "btn-primary",
    #     "secondary": "btn-secondary",
    #     "info": "btn-secondary",
    #     "warning": "btn-warning",
    #     "danger": "btn-danger",
    #     "success": "btn-dark "
    # },
    "actions_sticky_top": True
}
